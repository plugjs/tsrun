name: Release Package

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        version: [18, 20, 22]

    runs-on: ubuntu-latest
    name: Build Pull Request

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org
          node-version: ${{ matrix.version }}

      - name: Build Package
        run: |
          npm clean-install
          npm run build

  publish:
    runs-on: ubuntu-latest
    name: Publish Package
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.repo_token }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org
          node-version: 20

      - name: Build Package
        run: |
          npm clean-install
          npm run build

      - name: Publish Package
        run: |
          VERSION="$(node -p 'require("./package.json").version')"

          test -z "$(git ls-remote --tags origin "v${VERSION}")" || {
            echo "Release ${VERSION} already tagged, exiting..."
            echo "::notice::Release ${VERSION} already tagged"
            exit 0
          }

          git config user.email 'developers@juit.com'
          git config user.name 'Github Workflows'
          git tag -a -m "v${VERSION}" "v${VERSION}" "${{ github.sha }}"
          git push --tags

          gh release create "v${VERSION}" \
            --title "Release ${VERSION}" \
            --target "${{ github.sha }}" \
            --verify-tag

          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
          GH_TOKEN: ${{ secrets.repo_token }}
